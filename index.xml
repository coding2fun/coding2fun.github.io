<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Coding is Fun</title>
        <link>https://coding2fun.github.io/</link>
        <description>Coding is Fun</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>kishorenayark@gmail.com (Kishore Karunakaran)</managingEditor>
            <webMaster>kishorenayark@gmail.com (Kishore Karunakaran)</webMaster><lastBuildDate>Tue, 31 Aug 2021 20:33:53 &#43;0530</lastBuildDate>
            <atom:link href="https://coding2fun.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Writing non blocking async processing using Kotlin Coroutines in JVM</title>
    <link>https://coding2fun.github.io/kotlin_coroutines-1/</link>
    <pubDate>Tue, 31 Aug 2021 20:33:53 &#43;0530</pubDate>
    <author>Author</author>
    <guid>https://coding2fun.github.io/kotlin_coroutines-1/</guid>
    <description><![CDATA[Coroutines make our asynchronous code look sequential
The systems we build nowadays don&rsquo;t really do a lot of computation, instead they communicate between services such as Database, REST API&rsquo;s, etc. If you look deeper we are building a system that wait&rsquo;s most of the time. We send a request to the server and we wait for the response. Microservices, Rest API that&rsquo;s part of our daily life. So, What&rsquo;s the problem with waiting ?]]></description>
</item><item>
    <title>Probabilistic Data Structures</title>
    <link>https://coding2fun.github.io/probability-ds/</link>
    <pubDate>Wed, 05 Jun 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://coding2fun.github.io/probability-ds/</guid>
    <description><![CDATA[Suppose let’s say you are signing up for the new Email id. When you enter a new mail id, respective mail service will check whether the given mail id already exists.
So how can we build such a kind of systems ? Think for a minute before continue reading
 Keep all email id’s in memory i.e. Cache, It’s not practical to keep all email id’s in memory. Store it in database/disk and check whether the given email id exist by reading or querying from db/disk.]]></description>
</item><item>
    <title>Micronaut and AWS Lambda</title>
    <link>https://coding2fun.github.io/micronaut_aws_lambda/</link>
    <pubDate>Tue, 24 Nov 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://coding2fun.github.io/micronaut_aws_lambda/</guid>
    <description><![CDATA[Introduction A year ago, I was developing an enterprise solution using aws lambda with Java and at that time there was no support for high level tools and frameworks in the ecosystem with respect to Serverless space something like Spring Boot. I’ve used spring cloud in aws lambda but it didn’t work for the solution we are building. So I’ve started developing with the plain AWS SDK library and Speedment ORM but after building the few services I&rsquo;ve felt a couple of bottlenecks.]]></description>
</item></channel>
</rss>
